- name: Stop any existing SonarQube service
  ansible.builtin.systemd:
    name: container-sonarqube
    state: stopped
  register: sysd
  ignore_errors: true
# - name: Login to default registry and create ${XDG_RUNTIME_DIR}/containers/auth.json
#   containers.podman.podman_login:
#     username: "{{ lookup('env', 'REPOSITORY_USERNAME') }}"
#     password: "{{ lookup('env', 'REPOSITORY_PASSWORD') }}"
#     registry: "{{ lookup('env', 'REPOSITORY') }}"
- name: Pull SonarQube OCI Image
  containers.podman.podman_image:
    name: "{{ container.image }}"
    force: true
    username: "{{ lookup('env', 'REPOSITORY_USERNAME') }}"
    password: "{{ lookup('env', 'REPOSITORY_PASSWORD') }}"
- name: Adding some folders for binding
  ansible.builtin.file:
    path: "{{ sqpath }}"
    state: directory
    owner: 1001
    group: 1001
    mode: 0755
  loop:
    - /opt/sonarqube
  loop_control:
    loop_var: sqpath
- debug:
    msg: "{{ container.image }}"
# - name: Adding SSL Application Port
#   ansible.builtin.ini_file:
#     path: "/opt/nexus/etc/nexus.properties"
#     section:
#     no_extra_spaces: true
#     option: "{{ ssl_setting['name'] }}"
#     value: "{{ ssl_setting['value'] }}"
#     mode: '0644'
#   loop:
#     - name: application-port-ssl
#       value: 8443
#     - name: nexus-args
#       value: "${jetty.etc}/jetty.xml,${jetty.etc}/jetty-https.xml,${jetty.etc}/jetty-requestlog.xml"
#     - name: "ssl.etc"
#       value: "${karaf.data}/etc/ssl"
#   loop_control:
#     loop_var: ssl_setting
# - name: Setup the VM options
#   ansible.builtin.template:
#     src: "templates/nexus.vmoptions.j2"
#     dest: /opt/nexus/nexus.vmoptions
#     mode: '0644'
# - name: Create the sysconfig file
#   ansible.builtin.template:
#     src: "templates/sysconfig/nexus.j2"
#     dest: /etc/sysconfig/nexus
#     mode: '0644'
# - name: Add cron script
#   ansible.builtin.copy:
#     src: "{{ playbook_dir }}/files/renewcert"
#     dest: /etc/cron.daily/renewcert
#     mode: 0755
# - name: Run the renewcert
#   ansible.builtin.command: /etc/cron.daily/renewcert
#   register: cmd
#   changed_when:
#     - "'Regenerating' in cmd.stdout"
# - name: Set the permissions on the JKS
#   ansible.builtin.file:
#     path: /opt/nexus/etc/ssl/keystore.jks
#     owner: 200
#     group: 200
- name: Re-create sonarqube container with systemd service file generated
  containers.podman.podman_container:
    name: sonarqube
    image: "{{ container.image }}"
    state: started
    recreate: true
    privileged: true
    hostname: "{{ container.hostname }}"
    cap_add:
      - ALL
    stop_timeout: 3600
    log_driver: journald
    log_opt:
      tag: sonarqube
      max_size: 10mb
    ports:
      - "443:8443"
    expose:
      - "8443"
    env:
      SONARQUBE_DATABASE_USER: "{{ lookup('env', 'SONARQUBE_DATABASE_USER') }}"
      SONARQUBE_DATABASE_PASSWORD: "{{ lookup('env', 'SONARQUBE_DATABASE_PASSWORD') }}"
      SONARQUBE_PASSWORD: "{{ lookup('env', 'SONARQUBE_PASSWORD') }}"
      SONARQUBE_USERNAME: "{{ lookup('env', 'SONARQUBE_USERNAME') }}"
      SONARQUBE_DATABASE_HOST: "{{ lookup('env', 'SONARQUBE_DATABASE_HOST') }}"
      SONARQUBE_DATABASE_NAME: "{{ lookup('env', 'SONARQUBE_DATABASE_NAME') }}"
      SONARQUBE_DATABASE_PORT_NUMBER: "{{ lookup('env', 'SONARQUBE_DATABASE_PORT_NUMBER') }}"
      SONARQUBE_EMAIL: "{{ lookup('env', 'SONARQUBE_EMAIL') }}"
    volumes:
      - /opt/sonarqube://bitnami/sonarqube:Z
    generate_systemd:
      path: /etc/systemd/system/
      restart_policy: always
      time: 120
      names: true
- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true
- name: Restart the service
  ansible.builtin.systemd:
    name: container-sonarqube
    state: restarted
